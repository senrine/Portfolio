import {
  useTheme
} from "./chunk-KYDE6FLK.js";
import {
  progressBarTheme,
  progressTheme
} from "./chunk-7J5EVDFB.js";

// src/components/progress.tsx
import * as React from "react";
import { twMerge } from "tailwind-merge";
import { jsx } from "react/jsx-runtime";
var ProgressContext = React.createContext({
  value: 0,
  color: "primary"
});
var ProgressRoot = React.forwardRef(
  ({ as, size, color, value, className, children, ...rest }, ref) => {
    const Element = as ?? "div";
    const contextTheme = useTheme();
    const theme = contextTheme.progress ?? progressTheme;
    const defaultProps = theme?.defaultProps;
    size ??= defaultProps?.size ?? "md";
    color ??= defaultProps?.color ?? "primary";
    const styles = twMerge(theme.baseStyle, theme.size[size], className);
    const contextValue = React.useMemo(
      () => ({ value, color }),
      [value, color]
    );
    return /* @__PURE__ */ jsx(ProgressContext.Provider, { value: contextValue, children: /* @__PURE__ */ jsx(Element, { ...rest, ref, className: styles, children }) });
  }
);
ProgressRoot.displayName = "MaterialTailwind.Progress";
var ProgressBar = React.forwardRef(
  ({ as, className, children, ...rest }, ref) => {
    const Element = as ?? "div";
    const contextTheme = useTheme();
    const { color, value } = React.useContext(ProgressContext);
    const theme = contextTheme.progressBar ?? progressBarTheme;
    const styles = twMerge(
      theme.baseStyle,
      theme.color[color],
      className
    );
    return /* @__PURE__ */ jsx(
      Element,
      {
        ...rest,
        ref,
        className: styles,
        style: {
          width: `${value}%`,
          ...rest?.style
        },
        children
      }
    );
  }
);
ProgressBar.displayName = "MaterialTailwind.ProgressBar";
var Progress = Object.assign(ProgressRoot, {
  Bar: ProgressBar
});
var progress_default = Progress;

export {
  ProgressContext,
  ProgressRoot,
  ProgressBar,
  Progress,
  progress_default
};
