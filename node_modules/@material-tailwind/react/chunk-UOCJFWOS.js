import {
  useTheme
} from "./chunk-KYDE6FLK.js";
import {
  buttonGroupTheme
} from "./chunk-LN4CMBOV.js";

// src/components/button-group.tsx
import * as React from "react";
import { twMerge } from "tailwind-merge";
import { jsx } from "react/jsx-runtime";
var ButtonGroup = React.forwardRef(
  ({
    as,
    color,
    variant,
    size,
    ripple,
    isPill,
    isFullWidth,
    className,
    orientation,
    children,
    ...rest
  }, ref) => {
    const Element = as ?? "div";
    const contextTheme = useTheme();
    const theme = contextTheme?.buttonGroup ?? buttonGroupTheme;
    const defaultProps = theme?.defaultProps;
    size ??= defaultProps?.size ?? "md";
    ripple ??= defaultProps?.ripple ?? true;
    color ??= defaultProps?.color ?? "primary";
    variant ??= defaultProps?.variant ?? "solid";
    orientation ??= defaultProps?.orientation ?? "horizontal";
    isFullWidth ??= defaultProps?.isFullWidth ?? false;
    isPill ??= defaultProps?.isPill ?? false;
    const styles = twMerge(theme.baseStyle, className);
    return /* @__PURE__ */ jsx(
      Element,
      {
        ...rest,
        ref,
        className: styles,
        "data-variant": variant,
        "data-orientation": orientation,
        "data-shape": isPill ? "pill" : "default",
        "data-width": isFullWidth ? "full" : "default",
        children: React.Children.map(
          children,
          (child) => React.isValidElement(child) && React.cloneElement(child, {
            variant,
            size,
            color,
            ripple,
            isPill,
            isFullWidth,
            "data-variant": variant,
            "data-orientation": orientation,
            ...child.props
          })
        )
      }
    );
  }
);
ButtonGroup.displayName = "MaterialTailwind.ButtonGroup";
var button_group_default = ButtonGroup;

export {
  ButtonGroup,
  button_group_default
};
