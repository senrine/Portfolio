import * as react_jsx_runtime from 'react/jsx-runtime';
import { DeepPartial } from '../types/general.js';
import 'react';

type Theme = DeepPartial<typeof theme>;
declare const theme: {
    accordion: {
        defaultProps: {
            type: string;
        };
    };
    accordionItem: {
        defaultProps: {
            disabled: boolean;
        };
        baseStyle: string;
    };
    accordionTrigger: {
        baseStyle: string;
    };
    accordionContent: {
        baseStyle: string;
    };
    alert: {
        defaultProps: {
            size: string;
            color: string;
            variant: string;
            rounded: boolean;
        };
        baseStyle: string;
        variant: {
            ghost: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            solid: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            outline: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            gradient: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
        };
    };
    alertContent: {
        baseStyle: string;
    };
    alertIcon: {
        baseStyle: string;
    };
    alertDismissTrigger: {
        baseStyle: string;
    };
    avatar: {
        defaultProps: {
            size: string;
            variant: string;
        };
        baseStyle: string;
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            xxl: string;
        };
    };
    breadcrumb: {
        baseStyle: string;
    };
    breadcrumbLink: {
        baseStyle: string;
    };
    breadcrumbSeparator: {
        baseStyle: string;
    };
    button: {
        defaultProps: {
            size: string;
            color: string;
            variant: string;
            ripple: boolean;
            isPill: boolean;
            isFullWidth: boolean;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
        variant: {
            ghost: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            solid: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            outline: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            gradient: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
        };
    };
    buttonGroup: {
        defaultProps: {
            size: string;
            color: string;
            variant: string;
            ripple: boolean;
            isFullWidth: boolean;
            isPill: boolean;
            orientation: string;
        };
        baseStyle: string;
    };
    checkbox: {
        defaultProps: {
            color: string;
        };
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    checkboxIndicator: {
        baseStyle: string;
    };
    card: {
        defaultProps: {
            variant: string;
            color: string;
        };
        baseStyle: string;
        variant: {
            ghost: {
                default: string;
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            solid: {
                default: string;
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            outline: {
                default: string;
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            gradient: {
                default: string;
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
        };
    };
    cardHeader: {
        baseStyle: string;
    };
    cardBody: {
        baseStyle: string;
    };
    cardFooter: {
        baseStyle: string;
    };
    chip: {
        defaultProps: {
            size: string;
            color: string;
            variant: string;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
        variant: {
            ghost: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            solid: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            outline: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            gradient: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
        };
    };
    chipLabel: {
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    chipIcon: {
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    chipDismissTrigger: {
        defaultProps: {
            ripple: boolean;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    collapse: {
        baseStyle: string;
    };
    dialog: {
        defaultProps: {
            size: string;
        };
    };
    dialogTrigger: {
        baseStyle: string;
    };
    dialogOverlay: {
        defaultProps: {
            lockScroll: boolean;
        };
        baseStyle: string;
    };
    dialogContent: {
        defaultProps: {
            disabled: boolean;
            initialFocus: number;
            returnFocus: boolean;
            guards: boolean;
            modal: boolean;
            visuallyHiddenDismiss: boolean;
            closeOnFocusOut: boolean;
            order: string[];
        };
        baseStyle: string;
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            screen: string;
        };
    };
    dialogDismissTrigger: {
        baseStyle: string;
    };
    drawerTrigger: {
        baseStyle: string;
    };
    drawerOverlay: {
        defaultProps: {
            lockScroll: boolean;
        };
        baseStyle: string;
    };
    drawerPanel: {
        defaultProps: {
            disabled: boolean;
            initialFocus: number;
            returnFocus: boolean;
            guards: boolean;
            modal: boolean;
            visuallyHiddenDismiss: boolean;
            closeOnFocusOut: boolean;
            order: string[];
            placement: string;
        };
        baseStyle: string;
    };
    drawerDismissTrigger: {
        baseStyle: string;
    };
    iconButton: {
        defaultProps: {
            size: string;
            color: string;
            variant: string;
            ripple: boolean;
            isCircular: boolean;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
        variant: {
            ghost: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            solid: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            outline: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
            gradient: {
                primary: string;
                secondary: string;
                info: string;
                success: string;
                warning: string;
                error: string;
            };
        };
    };
    input: {
        defaultProps: {
            size: string;
            color: string;
            isPill: boolean;
            isError: boolean;
            isSuccess: boolean;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    inputField: {
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    inputIcon: {
        defaultProps: {
            placement: string;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    list: {
        baseStyle: string;
    };
    listItem: {
        defaultProps: {
            ripple: boolean;
        };
        baseStyle: string;
    };
    listItemStart: {
        baseStyle: string;
    };
    listItemEnd: {
        baseStyle: string;
    };
    menu: {
        defaultProps: {
            placement: string;
            offset: number;
        };
    };
    menuContent: {
        defaultProps: {
            disabled: boolean;
            initialFocus: number;
            returnFocus: boolean;
            guards: boolean;
            modal: boolean;
            visuallyHiddenDismiss: boolean;
            closeOnFocusOut: boolean;
            order: string[];
        };
        baseStyle: string;
    };
    menuTrigger: {
        baseStyle: string;
    };
    menuItem: {
        defaultProps: {
            ripple: boolean;
            closeOnClick: boolean;
        };
        baseStyle: string;
    };
    popover: {
        defaultProps: {
            placement: string;
            offset: number;
        };
    };
    popoverTrigger: {
        baseStyle: string;
    };
    popoverContent: {
        defaultProps: {
            disabled: boolean;
            initialFocus: number;
            returnFocus: boolean;
            guards: boolean;
            modal: boolean;
            visuallyHiddenDismiss: boolean;
            closeOnFocusOut: boolean;
            order: string[];
        };
        baseStyle: string;
    };
    popoverArrow: {
        baseStyle: string;
    };
    progress: {
        defaultProps: {
            size: string;
            color: string;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    progressBar: {
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    radio: {
        defaultProps: {
            color: string;
            orientation: string;
        };
        baseStyle: string;
    };
    radioItem: {
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    radioIndicator: {
        baseStyle: string;
    };
    rating: {
        defaultProps: {
            count: number;
            color: string;
            ratedIcon: react_jsx_runtime.JSX.Element;
            unratedIcon: react_jsx_runtime.JSX.Element;
            readonly: boolean;
        };
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    select: {
        defaultProps: {
            size: string;
            color: string;
            isPill: boolean;
            isError: boolean;
            isSuccess: boolean;
            placement: string;
            offset: number;
        };
    };
    selectTrigger: {
        defaultProps: {
            indicator: react_jsx_runtime.JSX.Element;
        };
        baseStyle: string;
        size: {
            sm: string;
            md: string;
            lg: string;
        };
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    selectList: {
        defaultProps: {
            disabled: boolean;
            initialFocus: number;
            returnFocus: boolean;
            guards: boolean;
            modal: boolean;
            visuallyHiddenDismiss: boolean;
            closeOnFocusOut: boolean;
            order: string[];
        };
        baseStyle: string;
    };
    selectOption: {
        defaultProps: {
            ripple: boolean;
            indicator: react_jsx_runtime.JSX.Element;
        };
        baseStyle: string;
    };
    spinner: {
        defaultProps: {
            size: string;
            color: string;
        };
        baseStyle: string;
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            xxl: string;
        };
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    switch: {
        defaultProps: {
            color: string;
        };
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    tabs: {
        defaultProps: {
            orientation: string;
        };
        baseStyle: string;
    };
    tabsList: {
        baseStyle: string;
    };
    tabsTrigger: {
        baseStyle: string;
    };
    tabsPanel: {
        baseStyle: string;
    };
    tabsTriggerIndicator: {
        baseStyle: string;
    };
    textarea: {
        defaultProps: {
            size: string;
            color: string;
            resize: boolean;
            isError: boolean;
            isSuccess: boolean;
        };
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
        size: {
            sm: string;
            md: string;
            lg: string;
        };
    };
    tooltip: {
        defaultProps: {
            placement: string;
            offset: number;
            interactive: boolean;
        };
    };
    tooltipTrigger: {
        baseStyle: string;
    };
    tooltipContent: {
        baseStyle: string;
    };
    tooltipArrow: {
        baseStyle: string;
    };
    typography: {
        defaultProps: {
            type: string;
            color: string;
        };
        baseStyle: string;
        color: {
            inherit: string;
            default: string;
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
        type: {
            h1: string;
            h2: string;
            h3: string;
            h4: string;
            h5: string;
            h6: string;
            lead: string;
            p: string;
            small: string;
        };
    };
    timeline: {
        defaultProps: {
            color: string;
            mode: string;
            orientation: string;
        };
        baseStyle: string;
    };
    timelineItem: {
        baseStyle: string;
    };
    timelineHeader: {
        baseStyle: string;
    };
    timelineIcon: {
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    timelineSeparator: {
        baseStyle: string;
        color: {
            primary: string;
            secondary: string;
            info: string;
            success: string;
            warning: string;
            error: string;
        };
    };
    timelineBody: {
        baseStyle: string;
    };
};

export { Theme, theme as default, theme };
