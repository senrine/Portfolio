import {
  useTheme
} from "./chunk-KYDE6FLK.js";
import {
  typographyTheme
} from "./chunk-36U2OMN6.js";

// src/components/typography.tsx
import * as React from "react";
import { twMerge } from "tailwind-merge";
import { jsx } from "react/jsx-runtime";
var headings = ["h1", "h2", "h3", "h4", "h5", "h6"];
var Typography = React.forwardRef(
  ({ as, color, type, className, children, ...rest }, ref) => {
    const Element = as ? as : type === "lead" ? "p" : type || "p";
    const contextTheme = useTheme();
    const theme = contextTheme?.typography ?? typographyTheme;
    const defaultProps = theme?.defaultProps;
    if (headings.includes(type) && color === "inherit") {
      color = "default";
    } else {
      color ??= defaultProps?.color ?? "inherit";
    }
    color ??= defaultProps?.color ?? "inherit";
    type ??= defaultProps?.type ?? "p";
    const styles = twMerge(
      theme.baseStyle,
      theme["type"][type],
      theme["color"][color],
      className
    );
    return /* @__PURE__ */ jsx(Element, { ...rest, ref, className: styles, children });
  }
);
Typography.displayName = "MaterialTailwind.Typography";
var typography_default = Typography;

export {
  Typography,
  typography_default
};
