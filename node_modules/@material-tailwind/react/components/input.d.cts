import * as React from 'react';
import { BaseComponent } from '../types/general.cjs';

interface InputContextProps extends Omit<BaseComponent<HTMLElement>, "variant"> {
    iconPlacement?: "start" | "end" | string;
    isIconDefined?: boolean;
    isError?: boolean;
    isSuccess?: boolean;
    disabled?: boolean;
    setIconPlacement: React.Dispatch<React.SetStateAction<string>>;
    setIsIconDefined: React.Dispatch<React.SetStateAction<boolean>>;
}
declare const InputContext: React.Context<InputContextProps>;
interface InputProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as" | "size"> {
    as?: React.ElementType;
    size?: BaseComponent<HTMLElement>["size"];
    color?: BaseComponent<HTMLElement>["color"];
    isPill?: boolean;
    isError?: boolean;
    isSuccess?: boolean;
    disabled?: boolean;
    className?: string;
    children: React.ReactNode;
}
/**
 * @remarks
 * [Documentation](http://www.material-tailwind.com/docs/react/input) •
 * [Props Definition](https://www.material-tailwind.com/docs/react/input#input-props) •
 * [Theming Guide](https://www.material-tailwind.com/docs/react/input#input-theme)
 */
declare const InputRoot: React.ForwardRefExoticComponent<InputProps & React.RefAttributes<HTMLElement>>;
interface InputFieldProps extends React.AllHTMLAttributes<HTMLInputElement> {
    type?: "text" | "email" | "password" | "search" | "number" | "tel" | "url" | "hidden";
}
declare const InputField: React.ForwardRefExoticComponent<InputFieldProps & React.RefAttributes<HTMLInputElement>>;
interface InputIconProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    placement?: "start" | "end";
}
declare const InputIcon: React.ForwardRefExoticComponent<InputIconProps & React.RefAttributes<HTMLElement>>;
declare const Input: React.ForwardRefExoticComponent<InputProps & React.RefAttributes<HTMLElement>> & {
    Field: React.ForwardRefExoticComponent<InputFieldProps & React.RefAttributes<HTMLInputElement>>;
    Icon: React.ForwardRefExoticComponent<InputIconProps & React.RefAttributes<HTMLElement>>;
};

export { Input, InputContext, InputContextProps, InputField, InputFieldProps, InputIcon, InputIconProps, InputProps, InputRoot, Input as default };
