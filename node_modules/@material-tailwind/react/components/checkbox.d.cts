import * as React from 'react';
import { BaseComponent } from '../types/general.cjs';

interface CheckboxContextProps {
    disabled?: boolean;
    checked?: boolean;
    color?: BaseComponent<HTMLInputElement>["color"];
}
declare const CheckboxContext: React.Context<CheckboxContextProps>;
interface CheckboxProps extends React.AllHTMLAttributes<HTMLInputElement> {
    color?: BaseComponent<HTMLInputElement>["color"];
    disabled?: boolean;
    className?: string;
    children: React.ReactNode;
}
/**
 * @remarks
 * [Documentation](http://www.material-tailwind.com/docs/react/checkbox) •
 * [Props Definition](https://www.material-tailwind.com/docs/react/checkbox#checkbox-props) •
 * [Theming Guide](https://www.material-tailwind.com/docs/react/checkbox#checkbox-theme)
 */
declare const CheckboxRoot: React.ForwardRefExoticComponent<CheckboxProps & React.RefAttributes<HTMLLabelElement>>;
interface CheckboxIndicatorProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    children?: React.ReactNode;
}
declare const CheckboxIndicator: React.ForwardRefExoticComponent<CheckboxIndicatorProps & React.RefAttributes<HTMLElement>>;
declare const Checkbox: React.ForwardRefExoticComponent<CheckboxProps & React.RefAttributes<HTMLLabelElement>> & {
    Indicator: React.ForwardRefExoticComponent<CheckboxIndicatorProps & React.RefAttributes<HTMLElement>>;
};

export { Checkbox, CheckboxContext, CheckboxContextProps, CheckboxIndicator, CheckboxIndicatorProps, CheckboxProps, CheckboxRoot, Checkbox as default };
