import * as React from 'react';
import { BaseComponent } from '../types/general.js';

interface RadioContextProps {
    globalValue?: string;
    color?: BaseComponent<HTMLElement>["color"];
    setGlobalValue?: (e: string) => void;
}
declare const RadioContext: React.Context<RadioContextProps>;
interface RadioProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as" | "onChange"> {
    as?: React.ElementType;
    value?: string;
    defaultValue?: string;
    onChange?: (e: string) => void;
    color?: BaseComponent<HTMLElement>["color"];
    orientation?: "horizontal" | "vertical";
    className?: string;
    children: React.ReactNode;
}
/**
 * @remarks
 * [Documentation](http://www.material-tailwind.com/docs/react/radio) •
 * [Props Definition](https://www.material-tailwind.com/docs/react/radio#radio-props) •
 * [Theming Guide](https://www.material-tailwind.com/docs/react/radio#radio-theme)
 */
declare const RadioRoot: React.ForwardRefExoticComponent<RadioProps & React.RefAttributes<HTMLElement>>;
interface RadioItemProps extends React.AllHTMLAttributes<HTMLInputElement> {
    disabled?: boolean;
    className?: string;
    value?: string;
    children: React.ReactNode;
}
declare const RadioItem: React.ForwardRefExoticComponent<RadioItemProps & React.RefAttributes<HTMLLabelElement>>;
interface RadioIndicatorProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    children?: React.ReactNode;
}
declare const RadioIndicator: React.ForwardRefExoticComponent<RadioIndicatorProps & React.RefAttributes<HTMLElement>>;
declare const Radio: React.ForwardRefExoticComponent<RadioProps & React.RefAttributes<HTMLElement>> & {
    Item: React.ForwardRefExoticComponent<RadioItemProps & React.RefAttributes<HTMLLabelElement>>;
    Indicator: React.ForwardRefExoticComponent<RadioIndicatorProps & React.RefAttributes<HTMLElement>>;
};

export { Radio, RadioContext, RadioContextProps, RadioIndicator, RadioIndicatorProps, RadioItem, RadioItemProps, RadioProps, RadioRoot, Radio as default };
