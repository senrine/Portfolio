import * as React from 'react';
import { BaseComponent } from '../types/general.cjs';

interface CardProps extends Omit<BaseComponent<HTMLElement>, "size" | "color"> {
    as?: React.ElementType;
    className?: string;
    color?: "default" | BaseComponent<HTMLElement>["color"];
    children?: React.ReactNode;
}
/**
 * @remarks
 * [Documentation](http://www.material-tailwind.com/docs/react/card) •
 * [Props Definition](https://www.material-tailwind.com/docs/react/card#card-props) •
 * [Theming Guide](https://www.material-tailwind.com/docs/react/card#card-theme)
 */
declare const CardRoot: React.ForwardRefExoticComponent<CardProps & React.RefAttributes<HTMLElement>>;
interface CardHeaderProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    children?: React.ReactNode;
}
declare const CardHeader: React.ForwardRefExoticComponent<CardHeaderProps & React.RefAttributes<HTMLElement>>;
interface CardBodyProps extends CardHeaderProps {
}
declare const CardBody: React.ForwardRefExoticComponent<CardBodyProps & React.RefAttributes<HTMLElement>>;
interface CardFooterProps extends CardHeaderProps {
}
declare const CardFooter: React.ForwardRefExoticComponent<CardFooterProps & React.RefAttributes<HTMLElement>>;
declare const Card: React.ForwardRefExoticComponent<CardProps & React.RefAttributes<HTMLElement>> & {
    Header: React.ForwardRefExoticComponent<CardHeaderProps & React.RefAttributes<HTMLElement>>;
    Body: React.ForwardRefExoticComponent<CardBodyProps & React.RefAttributes<HTMLElement>>;
    Footer: React.ForwardRefExoticComponent<CardFooterProps & React.RefAttributes<HTMLElement>>;
};

export { Card, CardBody, CardBodyProps, CardFooter, CardFooterProps, CardHeader, CardHeaderProps, CardProps, CardRoot, CardFooter as default };
