import * as React from 'react';

interface ListProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    children: React.ReactNode;
}
/**
 * @remarks
 * [Documentation](http://www.material-tailwind.com/docs/react/list) •
 * [Props Definition](https://www.material-tailwind.com/docs/react/list#list-props) •
 * [Theming Guide](https://www.material-tailwind.com/docs/react/list#list-theme)
 */
declare const ListRoot: React.ForwardRefExoticComponent<ListProps & React.RefAttributes<HTMLElement>>;
interface ListItemProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    disabled?: boolean;
    selected?: boolean;
    ripple?: boolean;
    children: React.ReactNode;
}
declare const ListItem: React.ForwardRefExoticComponent<ListItemProps & React.RefAttributes<HTMLElement>>;
interface ListItemStartProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    children: React.ReactNode;
    disabled?: boolean;
    selected?: boolean;
    ripple?: boolean;
}
declare const ListItemStart: React.ForwardRefExoticComponent<ListItemStartProps & React.RefAttributes<HTMLElement>>;
interface ListItemEndProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    className?: string;
    children: React.ReactNode;
    disabled?: boolean;
    selected?: boolean;
    ripple?: boolean;
}
declare const ListItemEnd: React.ForwardRefExoticComponent<ListItemEndProps & React.RefAttributes<HTMLElement>>;
declare const List: React.ForwardRefExoticComponent<ListProps & React.RefAttributes<HTMLElement>> & {
    Item: React.ForwardRefExoticComponent<ListItemProps & React.RefAttributes<HTMLElement>>;
    ItemStart: React.ForwardRefExoticComponent<ListItemStartProps & React.RefAttributes<HTMLElement>>;
    ItemEnd: React.ForwardRefExoticComponent<ListItemEndProps & React.RefAttributes<HTMLElement>>;
};

export { List, ListItem, ListItemEnd, ListItemEndProps, ListItemProps, ListItemStart, ListItemStartProps, ListProps, ListRoot, List as default };
