import * as React from 'react';
import { BaseComponent } from '../types/general.cjs';

interface TypographyProps extends Omit<React.AllHTMLAttributes<HTMLElement>, "as"> {
    as?: React.ElementType;
    type?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "lead" | "p" | "small";
    color?: BaseComponent<HTMLElement>["color"] | "inherit" | "default";
    className?: string;
    children: React.ReactNode;
}
/**
 * @remarks
 * [Documentation](http://www.material-tailwind.com/docs/react/typography) •
 * [Props Definition](https://www.material-tailwind.com/docs/react/typography#props) •
 * [Theming Guide](https://www.material-tailwind.com/docs/react/typography#theme) •
 * [Report an Issue](https://github.com/creativetimofficial/material-tailwind/issues/new)
 *
 * @prop as: `Element`, default to `p`
 * @prop type: `h1` | `h2` | `h3` | `h4` | `h5` | `h6` | `lead` | `p` | `small`, default to `p`
 * @prop color: `primary` | `secondary` | `info` | `success` | `warning` | `error` | `inherit` | `default`, default to `inherit`
 * @prop className: `string`
 * @prop children: `ReactNode`
 */
declare const Typography: React.ForwardRefExoticComponent<TypographyProps & React.RefAttributes<HTMLElement>>;

export { Typography, TypographyProps, Typography as default };
